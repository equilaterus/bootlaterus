{"version":3,"sources":["../../prebuild/scripts/particles.js"],"names":["$","W","H","canvas","ctx","particleCount","particles","window","innerWidth","innerHeight","get","width","height","getContext","globalCompositeOperation","mouse","x","y","rx","ry","speed","delta","document","addEventListener","e","wheelDelta","Math","random","randomNorm","mean","stdev","abs","round","Particle","h","parseInt","s","l","a","color","shadowcolor","parseFloat","direction","radius","scale","rotation","PI","grad","createRadialGradient","addColorStop","vx","vy","valpha","move","changeDirection","axis","draw","save","translate","rotate","beginPath","fillStyle","arc","fill","restore","boundaryCheck","clearCanvas","clearRect","createParticles","i","p","push","drawParticles","updateParticles","length","initParticleSystem","animateParticles","setDelta","update","requestAnimationFrame","then","now","Date","getTime","isNaN","distX","distY"],"mappings":";;AAAA;AACA;AACA;AACA;AAEAA,CAAC,CAAC,YAAY;AACZ,MAAIC,CAAJ;AAAA,MAAOC,CAAP;AAAA,MACEC,MADF;AAAA,MACUC,GADV;AAAA,MACe;AACbC,EAAAA,aAAa,GAAG,GAFlB;AAAA,MAGEC,SAAS,GAAG,EAHd,CADY,CAIM;;AAElBL,EAAAA,CAAC,GAAGM,MAAM,CAACC,UAAX;AACAN,EAAAA,CAAC,GAAGK,MAAM,CAACE,WAAX;AAEAN,EAAAA,MAAM,GAAGH,CAAC,CAAC,SAAD,CAAD,CAAaU,GAAb,CAAiB,CAAjB,CAAT,CATY,CASkB;;AAC9BP,EAAAA,MAAM,CAACQ,KAAP,GAAeV,CAAf;AACAE,EAAAA,MAAM,CAACS,MAAP,GAAgBV,CAAhB;AAEAE,EAAAA,GAAG,GAAGD,MAAM,CAACU,UAAP,CAAkB,IAAlB,CAAN,CAbY,CAamB;;AAC/BT,EAAAA,GAAG,CAACU,wBAAJ,GAA+B,SAA/B;AAEA,MAAIC,KAAK,GAAG;AACVC,IAAAA,CAAC,EAAE,CADO;AAEVC,IAAAA,CAAC,EAAE,CAFO;AAGVC,IAAAA,EAAE,EAAE,CAHM;AAIVC,IAAAA,EAAE,EAAE,CAJM;AAKVC,IAAAA,KAAK,EAAE,EALG;AAMVC,IAAAA,KAAK,EAAE;AANG,GAAZ;AAWAC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwC,UAAUC,CAAV,EAAa;AAEnDT,IAAAA,KAAK,CAACC,CAAN,GAAU,CAAV;AACAD,IAAAA,KAAK,CAACE,CAAN,GAAUO,CAAC,CAACC,UAAF,GAAeC,IAAI,CAACC,MAAL,EAAzB;AACAZ,IAAAA,KAAK,CAACC,CAAN,IAAWf,CAAC,GAAG,CAAf;AACAc,IAAAA,KAAK,CAACE,CAAN,IAAWf,CAAC,GAAG,CAAf;AAED,GAPD,EAOG,KAPH;;AASA,WAAS0B,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAE/B,WAAOJ,IAAI,CAACK,GAAL,CAASL,IAAI,CAACM,KAAL,CAAYN,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAArB,IAA2BD,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAA/C,KAAqDD,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAzE,CAAX,IAA0FG,KAAnG,IAA4GD,IAAnH;AACD,GAvCW,CAyCZ;;;AACA,WAASI,QAAT,GAAoB;AAClB;AACA,SAAKC,CAAL,GAASC,QAAQ,CAAC,GAAD,CAAjB;AACA,SAAKC,CAAL,GAASD,QAAQ,CAAC,KAAKT,IAAI,CAACC,MAAL,EAAL,GAAqB,EAAtB,CAAjB;AACA,SAAKU,CAAL,GAASF,QAAQ,CAAC,KAAKT,IAAI,CAACC,MAAL,EAAL,GAAqB,EAAtB,CAAjB;AACA,SAAKW,CAAL,GAASZ,IAAI,CAACC,MAAL,EAAT;AAEA,SAAKO,CAAL,GAASC,QAAQ,CAAC,GAAD,CAAjB;AACA,SAAKC,CAAL,GAASD,QAAQ,CAAC,KAAKT,IAAI,CAACC,MAAL,EAAL,GAAqB,EAAtB,CAAjB;AACA,SAAKU,CAAL,GAASF,QAAQ,CAAC,KAAKT,IAAI,CAACC,MAAL,EAAL,GAAqB,EAAtB,CAAjB;AACA,SAAKW,CAAL,GAAS,MAAMZ,IAAI,CAACC,MAAL,EAAf;AAEA,SAAKY,KAAL,GAAa,UAAU,KAAKL,CAAf,GAAmB,GAAnB,GAAyB,KAAKE,CAA9B,GAAkC,IAAlC,GAAyC,KAAKC,CAA9C,GAAkD,IAAlD,GAA0D,KAAKC,CAA/D,GAAoE,GAAjF;AACA,SAAKE,WAAL,GAAmB,UAAU,KAAKN,CAAf,GAAmB,GAAnB,GAAyB,KAAKE,CAA9B,GAAkC,IAAlC,GAAyC,KAAKC,CAA9C,GAAkD,IAAlD,GAAyDI,UAAU,CAAC,KAAKH,CAAL,GAAS,IAAV,CAAnE,GAAqF,GAAxG;AAIA,SAAKtB,CAAL,GAASU,IAAI,CAACC,MAAL,KAAgB1B,CAAzB;AACA,SAAKgB,CAAL,GAASS,IAAI,CAACC,MAAL,KAAgBzB,CAAzB;AACA,SAAKwC,SAAL,GAAiB;AACf,WAAK,CAAC,CAAD,GAAKhB,IAAI,CAACC,MAAL,KAAgB,CADX;AAEf,WAAK,CAAC,CAAD,GAAKD,IAAI,CAACC,MAAL,KAAgB;AAFX,KAAjB,CAnBkB,CAuBlB;;AACA,SAAKgB,MAAL,GAAcf,UAAU,CAAC,CAAD,EAAI,CAAJ,CAAxB;AACA,SAAKgB,KAAL,GAAa,MAAMlB,IAAI,CAACC,MAAL,EAAN,GAAsB,GAAnC;AACA,SAAKkB,QAAL,GAAgBnB,IAAI,CAACoB,EAAL,GAAU,CAAV,GAAcpB,IAAI,CAACC,MAAL,EAA9B;AAEA,SAAKoB,IAAL,GAAY3C,GAAG,CAAC4C,oBAAJ,CAAyB,KAAKhC,CAA9B,EAAiC,KAAKC,CAAtC,EAAyC,KAAK0B,MAA9C,EAAsD,KAAK3B,CAA3D,EAA8D,KAAKC,CAAnE,EAAsE,CAAtE,CAAZ;AACA,SAAK8B,IAAL,CAAUE,YAAV,CAAuB,CAAvB,EAA0B,KAAKV,KAA/B;AACA,SAAKQ,IAAL,CAAUE,YAAV,CAAuB,CAAvB,EAA0B,KAAKT,WAA/B;AAEA,SAAKU,EAAL,GAAU,CAAC,IAAIxB,IAAI,CAACC,MAAL,EAAJ,GAAoB,CAArB,IAA0B,GAA1B,GAAgC,KAAKgB,MAA/C;AACA,SAAKQ,EAAL,GAAU,CAAC,IAAIzB,IAAI,CAACC,MAAL,EAAJ,GAAoB,CAArB,IAA0B,GAA1B,GAAgC,KAAKgB,MAA/C;AAEA,SAAKS,MAAL,GAAc,OAAO1B,IAAI,CAACC,MAAL,EAAP,GAAuB,IAArC;;AAEA,SAAK0B,IAAL,GAAY,YAAY;AACtB,WAAKrC,CAAL,IAAU,KAAKkC,EAAL,GAAU,KAAKR,SAAL,CAAe1B,CAAnC;AACA,WAAKC,CAAL,IAAU,KAAKkC,EAAL,GAAU,KAAKT,SAAL,CAAezB,CAAnC;AACA,WAAK4B,QAAL,IAAiB,KAAKO,MAAtB,CAHsB,CAItB;AAED,KAND;;AAOA,SAAKE,eAAL,GAAuB,UAAUC,IAAV,EAAgB;AACrC,WAAKb,SAAL,CAAea,IAAf,KAAwB,CAAC,CAAzB;AACA,WAAKH,MAAL,IAAe,CAAC,CAAhB;AACD,KAHD;;AAIA,SAAKI,IAAL,GAAY,YAAY;AACtBpD,MAAAA,GAAG,CAACqD,IAAJ;AACArD,MAAAA,GAAG,CAACsD,SAAJ,CAAc,CAAC,KAAK1C,CAAL,GAASD,KAAK,CAACG,EAAN,GAAW,CAAC,EAAZ,GAAiB,KAAKyB,MAAhC,IAA0C1C,CAAxD,EAA2D,CAAC,KAAKgB,CAAL,GAASF,KAAK,CAACI,EAAN,GAAW,CAAC,EAAZ,GAAiB,KAAKwB,MAAhC,IAA0CzC,CAArG;AACAE,MAAAA,GAAG,CAACuD,MAAJ,CAAW,KAAKd,QAAhB;AACAzC,MAAAA,GAAG,CAACwC,KAAJ,CAAU,CAAV,EAAa,KAAKA,KAAlB;AAEA,WAAKG,IAAL,GAAY3C,GAAG,CAAC4C,oBAAJ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAAKL,MAApC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,CAAZ;AACA,WAAKI,IAAL,CAAUE,YAAV,CAAuB,CAAvB,EAA0B,KAAKV,KAA/B;AACA,WAAKQ,IAAL,CAAUE,YAAV,CAAuB,CAAvB,EAA0B,KAAKT,WAA/B;AACApC,MAAAA,GAAG,CAACwD,SAAJ;AACAxD,MAAAA,GAAG,CAACyD,SAAJ,GAAgB,KAAKd,IAArB;AACA3C,MAAAA,GAAG,CAAC0D,GAAJ,CAAQ,CAAR,EAAW,CAAX,EAAc,KAAKnB,MAAnB,EAA2B,CAA3B,EAA8BjB,IAAI,CAACoB,EAAL,GAAU,CAAxC,EAA2C,KAA3C;AACA1C,MAAAA,GAAG,CAAC2D,IAAJ;AACA3D,MAAAA,GAAG,CAAC4D,OAAJ;AAGD,KAhBD;;AAiBA,SAAKC,aAAL,GAAqB,YAAY;AAC/B,UAAI,KAAKjD,CAAL,IAAUf,CAAd,EAAiB;AACf,aAAKqD,eAAL,CAAqB,GAArB;AACD,OAFD,MAEO,IAAI,KAAKtC,CAAL,IAAU,CAAd,EAAiB;AACtB,aAAKsC,eAAL,CAAqB,GAArB;AACD;;AACD,UAAI,KAAKrC,CAAL,IAAUf,CAAd,EAAiB;AACf,aAAKoD,eAAL,CAAqB,GAArB;AACD,OAFD,MAEO,IAAI,KAAKrC,CAAL,IAAU,CAAd,EAAiB;AACtB,aAAKqC,eAAL,CAAqB,GAArB;AACD;AACF,KAXD;AAYD,GAvHW,CAuHV;;;AAEF,WAASY,WAAT,GAAuB;AACrB9D,IAAAA,GAAG,CAAC+D,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBlE,CAApB,EAAuBC,CAAvB;AACD,GA3HW,CA2HV;;;AAEF,WAASkE,eAAT,GAA2B;AACzB,SAAK,IAAIC,CAAC,GAAGhE,aAAa,GAAG,CAA7B,EAAgCgE,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,UAAIC,CAAC,GAAG,IAAIrC,QAAJ,EAAR;AACA3B,MAAAA,SAAS,CAACiE,IAAV,CAAeD,CAAf;AACD;AACF,GAlIW,CAkIV;;;AAEF,WAASE,aAAT,GAAyB;AACvB,SAAK,IAAIH,CAAC,GAAGhE,aAAa,GAAG,CAA7B,EAAgCgE,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;AAC3C,UAAIC,CAAC,GAAGhE,SAAS,CAAC+D,CAAD,CAAjB;AACAC,MAAAA,CAAC,CAACd,IAAF;AACD;AAGF,GA3IW,CA2IV;;;AAEF,WAASiB,eAAT,GAA2B;AACzB,SAAK,IAAIJ,CAAC,GAAG/D,SAAS,CAACoE,MAAV,GAAmB,CAAhC,EAAmCL,CAAC,IAAI,CAAxC,EAA2CA,CAAC,EAA5C,EAAgD;AAC9C,UAAIC,CAAC,GAAGhE,SAAS,CAAC+D,CAAD,CAAjB;AACAC,MAAAA,CAAC,CAACjB,IAAF;AACAiB,MAAAA,CAAC,CAACL,aAAF;AAED;AACF,GApJW,CAoJV;;;AAEF,WAASU,kBAAT,GAA8B;AAC5BP,IAAAA,eAAe;AACfI,IAAAA,aAAa;AACd;;AAED,WAASI,gBAAT,GAA4B;AAC1BV,IAAAA,WAAW;AACXW,IAAAA,QAAQ;AACRC,IAAAA,MAAM;AACNN,IAAAA,aAAa;AACbC,IAAAA,eAAe;AACfM,IAAAA,qBAAqB,CAACH,gBAAD,CAArB;AACD;;AAEDD,EAAAA,kBAAkB;AAClBI,EAAAA,qBAAqB,CAACH,gBAAD,CAArB;AAEA,MAAII,IAAI,GAAG,CAAX;;AACA,WAASH,QAAT,GAAoB;AAClB,QAAII,GAAG,GAAI,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAV;AACApE,IAAAA,KAAK,CAACM,KAAN,GAAc,CAAC4D,GAAG,GAAGD,IAAP,IAAe,IAA7B;AACAA,IAAAA,IAAI,GAAGC,GAAP;AACD;;AACD,WAASH,MAAT,GAAkB;AAEhB,QAAIM,KAAK,CAACrE,KAAK,CAACM,KAAP,CAAL,IAAsBN,KAAK,CAACM,KAAN,IAAe,CAAzC,EAA4C;AAAE;AAAS;;AAEvD,QAAIgE,KAAK,GAAGtE,KAAK,CAACC,CAAN,GAAWD,KAAK,CAACG,EAA7B;AAAA,QACEoE,KAAK,GAAGvE,KAAK,CAACE,CAAN,GAAWF,KAAK,CAACI,EAD3B;;AAGA,QAAIkE,KAAK,KAAK,CAAV,IAAeC,KAAK,KAAK,CAA7B,EAAgC;AAE9BvE,MAAAA,KAAK,CAACG,EAAN,IAAa,CAACH,KAAK,CAACG,EAAN,GAAWH,KAAK,CAACC,CAAlB,IAAuBD,KAAK,CAACK,KAA1C;AACAL,MAAAA,KAAK,CAACI,EAAN,IAAa,CAACJ,KAAK,CAACI,EAAN,GAAWJ,KAAK,CAACE,CAAlB,IAAuBF,KAAK,CAACK,KAA1C;AAED;AAEF;;AAAA;AACF,CA5LA,CAAD","sourcesContent":["// Dust Particles Simulation by bionicoz based on\n// Basic Particle Animation\n// Author: Brandon John-Freso\n// Updated by: Equilaterus\n\n$(function () {\n  var W, H,\n    canvas, ctx, //ctx stands for context and is the \"curso\" of our canvas element.\n    particleCount = 200,\n    particles = []; //this is an array which will hold our particles Object/Class\n\n  W = window.innerWidth;\n  H = window.innerHeight;\n\n  canvas = $(\"#canvas\").get(0); //this \"get(0) will pull the underlying non-jquery wrapped dom element from our selection\n  canvas.width = W;\n  canvas.height = H;\n\n  ctx = canvas.getContext(\"2d\"); // settng the context to 2d rather than the 3d WEBGL\n  ctx.globalCompositeOperation = \"lighter\";\n  \n  var mouse = {\n    x: 0,\n    y: 0,\n    rx: 0,\n    ry: 0,\n    speed: 45,\n    delta: 0\n  };\n\n\n\n  document.addEventListener('mousewheel', function (e) {\n\n    mouse.x = 0;\n    mouse.y = e.wheelDelta + Math.random();\n    mouse.x -= W / 2;\n    mouse.y -= H / 2;\n\n  }, false);\n\n  function randomNorm(mean, stdev) {\n\n    return Math.abs(Math.round((Math.random() * 2 - 1) + (Math.random() * 2 - 1) + (Math.random() * 2 - 1)) * stdev) + mean;\n  }\n\n  //Setup particle class\n  function Particle() {\n    //using hsl is easier when we need particles with similar colors\n    this.h = parseInt(182);\n    this.s = parseInt(40 * Math.random() + 30);\n    this.l = parseInt(40 * Math.random() + 60);\n    this.a = Math.random();\n\n    this.h = parseInt(182);\n    this.s = parseInt(40 * Math.random() + 30);\n    this.l = parseInt(40 * Math.random() + 60);\n    this.a = 0.3 * Math.random();\n\n    this.color = \"hsla(\" + this.h + \",\" + this.s + \"%,\" + this.l + \"%,\" + (this.a) + \")\";\n    this.shadowcolor = \"hsla(\" + this.h + \",\" + this.s + \"%,\" + this.l + \"%,\" + parseFloat(this.a - 0.55) + \")\";\n\n\n\n    this.x = Math.random() * W;\n    this.y = Math.random() * H;\n    this.direction = {\n      \"x\": -1 + Math.random() * 2,\n      \"y\": -1 + Math.random() * 2\n    };\n    //this.radius = 9 * ((Math.random()*2-1)+(Math.random()*2-1)+(Math.random()*2-1)+3);\n    this.radius = randomNorm(0, 4);\n    this.scale = 0.8 * Math.random() + 0.5;\n    this.rotation = Math.PI / 4 * Math.random();\n\n    this.grad = ctx.createRadialGradient(this.x, this.y, this.radius, this.x, this.y, 0);\n    this.grad.addColorStop(0, this.color);\n    this.grad.addColorStop(1, this.shadowcolor);\n\n    this.vx = (2 * Math.random() + 4) * .01 * this.radius;\n    this.vy = (2 * Math.random() + 4) * .01 * this.radius;\n\n    this.valpha = 0.01 * Math.random() - 0.02;\n\n    this.move = function () {\n      this.x += this.vx * this.direction.x;\n      this.y += this.vy * this.direction.y;\n      this.rotation += this.valpha;\n      //this.radius*= Math.abs((this.valpha*0.01+1));\n\n    };\n    this.changeDirection = function (axis) {\n      this.direction[axis] *= -1;\n      this.valpha *= -1;\n    };\n    this.draw = function () {\n      ctx.save();\n      ctx.translate((this.x + mouse.rx / -20 * this.radius) % W, (this.y + mouse.ry / -20 * this.radius) % H);\n      ctx.rotate(this.rotation);\n      ctx.scale(1, this.scale);\n\n      this.grad = ctx.createRadialGradient(0, 0, this.radius, 0, 0, 0);\n      this.grad.addColorStop(1, this.color);\n      this.grad.addColorStop(0, this.shadowcolor);\n      ctx.beginPath();\n      ctx.fillStyle = this.grad;\n      ctx.arc(0, 0, this.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n      ctx.restore();\n\n\n    };\n    this.boundaryCheck = function () {\n      if (this.x >= W) {\n        this.changeDirection(\"x\");\n      } else if (this.x <= 0) {\n        this.changeDirection(\"x\");\n      }\n      if (this.y >= H) {\n        this.changeDirection(\"y\");\n      } else if (this.y <= 0) {\n        this.changeDirection(\"y\");\n      }\n    };\n  } //end particle class\n\n  function clearCanvas() {\n    ctx.clearRect(0, 0, W, H);\n  } //end clear canvas\n\n  function createParticles() {\n    for (var i = particleCount - 1; i >= 0; i--) {\n      let p = new Particle();\n      particles.push(p);\n    }\n  } // end createParticles\n\n  function drawParticles() {\n    for (var i = particleCount - 1; i >= 0; i--) {\n      let p = particles[i];\n      p.draw();\n    }\n\n\n  } //end drawParticles\n\n  function updateParticles() {\n    for (var i = particles.length - 1; i >= 0; i--) {\n      let p = particles[i];\n      p.move();\n      p.boundaryCheck();\n\n    }\n  } //end updateParticles\n\n  function initParticleSystem() {\n    createParticles();\n    drawParticles();\n  }\n\n  function animateParticles() {\n    clearCanvas();\n    setDelta();\n    update()\n    drawParticles();\n    updateParticles();\n    requestAnimationFrame(animateParticles);\n  }\n\n  initParticleSystem();\n  requestAnimationFrame(animateParticles);\n\n  let then = 0;\n  function setDelta() {\n    let now = (new Date()).getTime();\n    mouse.delta = (now - then) / 1000;\n    then = now;\n  }\n  function update() {\n\n    if (isNaN(mouse.delta) || mouse.delta <= 0) { return; }\n\n    var distX = mouse.x - (mouse.rx),\n      distY = mouse.y - (mouse.ry);\n\n    if (distX !== 0 && distY !== 0) {\n\n      mouse.rx -= ((mouse.rx - mouse.x) / mouse.speed);\n      mouse.ry -= ((mouse.ry - mouse.y) / mouse.speed);\n\n    }\n\n  };\n});\n"],"file":"particles.js"}